// <auto-generated />
using System;
using Digiterati.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Digiterati.Data.Migrations
{
    [DbContext(typeof(EmployeeDbContext))]
    [Migration("20221008155410_addedUserId")]
    partial class addedUserId
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("Digiterati.Domain.Entities.Employees", b =>
                {
                    b.Property<int>("EmployeeID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("employeeId");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("EmployeeID"), 1L, 1);

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("email");

                    b.Property<string>("EmployeeName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("employeeName");

                    b.Property<double?>("Experience")
                        .HasColumnType("float")
                        .HasColumnName("experience");

                    b.Property<string>("LockStatus")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)")
                        .HasColumnName("lockStatus");

                    b.Property<string>("Manager")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)")
                        .HasColumnName("manager");

                    b.Property<int?>("ProfileId")
                        .HasColumnType("int")
                        .HasColumnName("profileId");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("status");

                    b.Property<string>("WfmManager")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)")
                        .HasColumnName("wfmManager");

                    b.HasKey("EmployeeID");

                    b.ToTable("Employees");
                });

            modelBuilder.Entity("Digiterati.Domain.Entities.SkillMap", b =>
                {
                    b.Property<int>("EmployeeID")
                        .HasColumnType("int")
                        .HasColumnName("employeeId");

                    b.Property<int>("SkillId")
                        .HasColumnType("int")
                        .HasColumnName("skillId");

                    b.HasKey("EmployeeID");

                    b.HasIndex("SkillId");

                    b.ToTable("SkillMaps");
                });

            modelBuilder.Entity("Digiterati.Domain.Entities.Skills", b =>
                {
                    b.Property<int>("SkillId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("skillId");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("SkillId"), 1L, 1);

                    b.Property<string>("SkillName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("skillName");

                    b.HasKey("SkillId");

                    b.ToTable("Skills");
                });

            modelBuilder.Entity("Digiterati.Domain.Entities.Softlock", b =>
                {
                    b.Property<int>("LockId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("lockId");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("LockId"), 1L, 1);

                    b.Property<int>("EmployeeId")
                        .HasColumnType("int")
                        .HasColumnName("employee_Id");

                    b.Property<DateTime?>("LastUpdated")
                        .HasColumnType("datetime2")
                        .HasColumnName("lastupdated");

                    b.Property<string>("Manager")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("manager");

                    b.Property<string>("ManagerStatus")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("managerstatus");

                    b.Property<string>("MgrLastUpdate")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("mgrlastupdate");

                    b.Property<string>("MgrStatusComment")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("mgrstatuscomment");

                    b.Property<DateTime?>("RequestDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("reqdate");

                    b.Property<string>("RequestMessage")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("requestmessage");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("status");

                    b.Property<string>("WfmRemark")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("wfmremark");

                    b.HasKey("LockId");

                    b.HasIndex("EmployeeId");

                    b.ToTable("SoftLocks");
                });

            modelBuilder.Entity("Digiterati.Domain.Entities.Users", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("email");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("name");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("password");

                    b.Property<string>("Role")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("role");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("userName");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("Digiterati.Domain.Entities.SkillMap", b =>
                {
                    b.HasOne("Digiterati.Domain.Entities.Employees", "Employees")
                        .WithMany("SkillMaps")
                        .HasForeignKey("EmployeeID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Digiterati.Domain.Entities.Skills", "Skills")
                        .WithMany("SkillMaps")
                        .HasForeignKey("SkillId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Employees");

                    b.Navigation("Skills");
                });

            modelBuilder.Entity("Digiterati.Domain.Entities.Softlock", b =>
                {
                    b.HasOne("Digiterati.Domain.Entities.Employees", "Employees")
                        .WithMany("SoftLocks")
                        .HasForeignKey("EmployeeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Employees");
                });

            modelBuilder.Entity("Digiterati.Domain.Entities.Employees", b =>
                {
                    b.Navigation("SkillMaps");

                    b.Navigation("SoftLocks");
                });

            modelBuilder.Entity("Digiterati.Domain.Entities.Skills", b =>
                {
                    b.Navigation("SkillMaps");
                });
#pragma warning restore 612, 618
        }
    }
}
